heat_template_version: 2013-05-23

description: Pfsense

parameters:
  keypair_name:
    description: Keypair for IPSEC server access
    label: SSH Keypair
    type: string

  flavor_name_fw:
    default: n2.cw.standard-1
    description: Flavor to use for the deployed instance
    type: string
    label: Flavor for Pfsense
    constraints:
      - allowed_values:
        - t1.cw.tiny
        - s1.cw.small-1
        - n2.cw.standard-1
        - n2.cw.standard-2
        - n2.cw.standard-4
        - n2.cw.standard-8
        - n2.cw.standard-16
        - n2.cw.highmem-2
        - n2.cw.highmem-4
        - n2.cw.highmem-8
        - n2.cw.highmem-16
  flavor_name_client:
      default: t1.cw.tiny
      description: Flavor to use for the deployed instance
      type: string
      label: Flavor for clients and admin machine
      constraints:
        - allowed_values:
          - t1.cw.tiny
          - s1.cw.small-1
          - n2.cw.standard-1
          - n2.cw.standard-2
          - n2.cw.standard-4
          - n2.cw.standard-8
          - n2.cw.standard-16
          - n2.cw.highmem-2
          - n2.cw.highmem-4
          - n2.cw.highmem-8
          - n2.cw.highmem-16

  public_net_cidr:
    description: /24 cidr of public network
    type: string


  private_net_cidr:
    description: /24 cidr of private network
    type: string

resources:
  network:
    type: OS::Neutron::Net

  subnet_public:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      ip_version: 4
      cidr: { get_param: public_net_cidr }
      allocation_pools:
        - start: { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: public_net_cidr} ] }
          end: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: public_net_cidr} ] }


  privatenet:
    type: OS::Neutron::Net

  subnet_private:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: privatenet }
      ip_version: 4
      enable_dhcp: True
      cidr: { get_param: private_net_cidr }
      host_routes:
        - destination: 0.0.0.0/0
          nexthop: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
        - destination: 169.254.169.254/32
          nexthop: { "Fn::Replace": [ {'.0/24': '.1'}, {get_param: private_net_cidr} ] }
      allocation_pools:
        - start: { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: private_net_cidr} ] }
          end: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: private_net_cidr} ] }

  clients_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }


  admin_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: b5dd7532-1533-4b9c-8bf9-e66631a9be1d

  fw_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: b5dd7532-1533-4b9c-8bf9-e66631a9be1d

  fw_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP }
        - { direction: ingress, protocol: UDP }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }



  fw_postboot:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
         str_replace:
           template: |
                ip_lan=$ip_lan$&netmask=24&dhcp_to=$dhcp_to$&dhcp_from=$dhcp_from$&hostname=$name$&domain=cloudwatt
           params:
               $ip_lan$: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
               $dhcp_to$ : { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: private_net_cidr} ] }
               $dhcp_from$: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: private_net_cidr} ] }
               $name$: { get_param: 'OS::stack_name' }
  fw_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: { get_resource: fw_postboot  }

  fw_public_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups: [{ get_resource: fw_sg }]

  fw_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: privatenet }
      allowed_address_pairs:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
          subnet_id: { get_resource: subnet_private }
      security_groups: [{ get_resource: fw_sg }]

  firewall:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image: dd162fa3-a386-45a6-8737-3cce42aab014
      flavor: { get_param: flavor_name_fw }
      networks:
        - port: { get_resource: fw_public_port }
        - port: { get_resource: fw_private_port }
      user_data_format: RAW
      user_data:
        get_resource: fw_postboot

  fw_floating_ass:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: fw_floating_ip }
      port_id: { get_resource: fw_public_port }


  admin:
    type: OS::Nova::Server
    depends_on: firewall
    properties:
      key_name: { get_param: keypair_name }
      image: Ubuntu 14.04
      flavor: { get_param: flavor_name_client }
      networks:
        - { network: { get_resource: privatenet } }
      security_groups:
        - { get_resource: clients_sg }
      user_data_format: RAW
      user_data: |
            #!/bin/bash
            sudo apt-get install -y lynx

  admingw_internet_surface:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: admin_floating_ip }
      server_id: { get_resource: admin}


outputs:
  fw_floating_ip:
    description: IP address of Pfsense
    value: { get_attr: [fw_floating_ip, floating_ip_address] }
  admin_floating_ip:
      description: IP address of Admin Machine
      value: { get_attr: [admin_floating_ip, floating_ip_address] }
