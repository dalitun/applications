heat_template_version: 2013-05-23

description: Pfsense

parameters:
  keypair_name:
    description: Keypair for IPSEC server access
    label: SSH Keypair
    type: string

  flavor_name_fw:
    default: n1.cw.standard-1
    description: Flavor to use for the deployed instance
    type: string
    label: Flavor for Pfsense
    constraints:
      - allowed_values:
        - t1.cw.tiny
        - s1.cw.small-1
        - n1.cw.standard-1
        - n2.cw.standard-2
        - n2.cw.standard-4
        - n2.cw.standard-8
        - n2.cw.standard-16
        - n2.cw.highmem-2
        - n2.cw.highmem-4
        - n2.cw.highmem-8
        - n2.cw.highmem-16

  flavor_name_admin:
      default: t1.cw.tiny
      description: Flavor to use for the deployed instance
      type: string
      label: Flavor for Admin
      constraints:
        - allowed_values:
          - t1.cw.tiny
          - s1.cw.small-1
          - n2.cw.standard-1
          - n2.cw.standard-2
          - n2.cw.standard-4
          - n2.cw.standard-8
          - n2.cw.standard-16
          - n2.cw.highmem-2
          - n2.cw.highmem-4
          - n2.cw.highmem-8
          - n2.cw.highmem-16

  public_net_cidr:
    description: /24 cidr of public network
    type: string


  private_net_cidr:
    description: /24 cidr of private network
    type: string


  sync_net_cidr:
    description: /24 cidr of private network
    type: string


resources:

  network:
    type: OS::Neutron::Net

  subnet_public:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      ip_version: 4
      cidr: { get_param: public_net_cidr }
      allocation_pools:
        - start: { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: public_net_cidr} ] }
          end: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: public_net_cidr} ] }

  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      external_gateway_info:
        enable_snat: true
        network: "public"

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource : router }
      subnet_id: { get_resource : subnet_public }

  privatenet:
    type: OS::Neutron::Net

  subnet_private:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: privatenet }
      ip_version: 4
      enable_dhcp: True
      cidr: { get_param: private_net_cidr }
      host_routes:
        - destination: 0.0.0.0/0
          nexthop: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
      gateway_ip: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
      allocation_pools:
        - start: { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: private_net_cidr} ] }
          end: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: private_net_cidr} ] }



  syncnet:
    type: OS::Neutron::Net

  subnet_sync:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: syncnet }
      ip_version: 4
      cidr: { get_param: sync_net_cidr }
      allocation_pools:
        - start: { "Fn::Replace": [ {'.0/24': '.10'}, {get_param: sync_net_cidr} ] }
          end: { "Fn::Replace": [ {'.0/24': '.199'}, {get_param: sync_net_cidr} ] }




  admin_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: ingress, protocol: TCP, port_range_min: 443, port_range_max: 443 }
        - { direction: ingress, protocol: TCP, port_range_min: 80, port_range_max: 80 }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }


  fw_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP }
        - { direction: ingress, protocol: UDP }
        - { direction: ingress, protocol: ICMP }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }


  vip_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: privatenet }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
          subnet_id: { get_resource: subnet_private }
      security_groups: [{ get_resource: fw_sg }]


  vip_floating_ip:
      type: OS::Neutron::FloatingIP
      properties:
        floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517


  vip_floating_ass:
      type: OS::Neutron::FloatingIPAssociation
      properties:
        floatingip_id: { get_resource: vip_floating_ip }
        port_id: { get_resource: vip_port }




  master_public_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups: [{ get_resource: fw_sg }]

  master_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: privatenet }
      allowed_address_pairs:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.252'}, {get_param: private_net_cidr} ] }
          subnet_id: { get_resource: subnet_private }
      mac_address: 02:e8:70:a6:e5:05
      security_groups: [{ get_resource: fw_sg }]

  backup_public_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups: [{ get_resource: fw_sg }]

  backup_private_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: privatenet }
      allowed_address_pairs:
         - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.253'}, {get_param: private_net_cidr} ] }
          subnet_id: { get_resource: subnet_private }
      mac_address: 02:2c:9c:83:80:cd
      security_groups: [{ get_resource: fw_sg }]


  master_sync_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: syncnet }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.253'}, {get_param: sync_net_cidr} ] }
          subnet_id: { get_resource: subnet_sync }
      security_groups: [{ get_resource: fw_sg }]

  backup_sync_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: syncnet }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: sync_net_cidr} ] }
          subnet_id: { get_resource: subnet_sync }
      security_groups: [{ get_resource: fw_sg }]


  master:
    type: OS::Nova::Server
    depends_on: backup
    properties:
      key_name: { get_param: keypair_name }
      image: Pfsense_cw_2.3
      flavor: { get_param: flavor_name_fw }
      networks:
        - port: { get_resource: master_public_port }
        - port: { get_resource: master_private_port }
        - port: { get_resource: master_sync_port }
      user_data_format: RAW
      user_data:
         str_replace:
           template: |
               ip_lan=$ip_lan$&ip_sync=$ip_sync$&type=MASTER&ip_peer=$ip_peer$&vip_lan=$vip_lan$&hostname=$stack$1&domain=cloudwatt

           params:
               $ip_lan$: { "Fn::Replace": [ {'.0/24': '.252'}, {get_param: private_net_cidr} ] }
               $ip_sync$: { "Fn::Replace": [ {'.0/24': '.253'}, {get_param: sync_net_cidr} ] }
               $ip_peer$: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: sync_net_cidr} ] }
               $vip_lan$: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }
               $stack$: { get_param: 'OS::stack_name' }


  backup:
     type: OS::Nova::Server
     properties:
       key_name: { get_param: keypair_name }
       image: Pfsense_cw_2.3
       flavor: { get_param: flavor_name_fw }
       networks:
         - port: { get_resource: backup_public_port }
         - port: { get_resource: backup_private_port }
         - port: { get_resource: backup_sync_port }
       user_data_format: RAW
       user_data:
        str_replace:
           template: |
               ip_lan=$ip_lan$&ip_sync=$ip_sync$&type=BACKUP&ip_peer=$ip_peer$&hostname=$stack$2&domain=cloudwatt

           params:
               $ip_lan$: { "Fn::Replace": [ {'.0/24': '.253'}, {get_param: private_net_cidr} ] }
               $ip_sync$: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: sync_net_cidr} ] }
               $ip_peer$: { "Fn::Replace": [ {'.0/24': '.253'}, {get_param: sync_net_cidr} ] }
               $stack$: { get_param: 'OS::stack_name' }





  client_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: privatenet }
      fixed_ips:
        - ip_address: { "Fn::Replace": [ {'.0/24': '.222'}, {get_param: private_net_cidr} ] }
          subnet_id: { get_resource: subnet_private }
      security_groups: [{ get_resource: admin_sg }]


  client:
    type: OS::Nova::Server
    depends_on: [ master, backup ]
    properties:
      key_name: { get_param: keypair_name }
      image: Ubuntu 14.04
      flavor: { get_param: flavor_name_admin }
      networks:
        - port: { get_resource: client_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            dhclient eth0
            #route add default via $gw$
          params:
            $gw$: { "Fn::Replace": [ {'.0/24': '.254'}, {get_param: private_net_cidr} ] }




outputs:
  fw_floating_ip:
    description: IP address of the deployed compute instance
    value: foool
